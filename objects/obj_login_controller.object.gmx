<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create variables
randomize();
loginId = ""
global.bearerToken = ""

bearerTokenId = scr_populate_bearer_token("test@cloudconfidant.com","Password123!@#")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(ds_map_find_value(async_load,"id") == loginId)
{
    var map = parseResponse(async_load)
    if(map == -1){
        show_message("Login Failed")
        return 0
    }
    var errorCode = ds_map_find_value(map,"errorCode")
    if(errorCode == undefined)
    {
        //SUCCESS
        instance_create(0,0,obj_rest_controller)
    }
    else
    {
        var errorMessage = ds_map_find_value(map,"errorMessage")
        show_message("Login Failed: " + errorMessage)
    }   
    

}
if(ds_map_find_value(async_load,"id") == bearerTokenId)
{
    var map = parseResponse(async_load)
    if(map == -1){
        show_message("Login Failed")
        return 0
    }
    var errorCode = ds_map_find_value(map,"errorCode")
    if(errorCode == undefined)
    {
        //SUCCESS
        var token = ds_map_find_value(map,"token")
        global.bearerToken = token
    }
    else
    {
        var errorMessage = ds_map_find_value(map,"errorMessage")
        show_message("Login Failed: " + errorMessage)
    }   
    

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.uiControlName=='login'
{
        with(global.usernameObjectId)
        {
            global.username = uiTextValue
        }
        with(global.passwordObjectId)
        {
            global.password = uiTextValue
        }
        loginId = scr_login(global.username,global.password)

}
if other.uiControlName=='register'
{
    room_goto(rm_register)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
